name: Deploy Autonomous Bot System

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run health check test
      run: |
        # Start server in background
        npm start &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:3000/health || exit 1
        
        # Test bot dashboard
        curl -f http://localhost:3000/dashboard || exit 1
        
        # Clean up
        kill $SERVER_PID
      
    - name: Check for security vulnerabilities
      run: npm audit --audit-level moderate
      
    - name: Test Docker build
      run: |
        docker build -t domjuan-test .
        docker run --rm -d --name domjuan-test-container -p 3001:3000 domjuan-test
        sleep 15
        curl -f http://localhost:3001/health || exit 1
        docker stop domjuan-test-container

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      continue-on-error: true
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/domjuan-bot-system:latest
          ${{ secrets.DOCKER_USERNAME }}/domjuan-bot-system:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
      continue-on-error: true

  deploy-heroku:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        healthcheck: "https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health"
        delay: 30
      continue-on-error: true

  deploy-vercel:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID}}
        vercel-project-id: ${{ secrets.PROJECT_ID}}
        vercel-args: '--prod'
      continue-on-error: true

  notification:
    needs: [test, build-and-push, deploy-heroku, deploy-vercel]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: |
          ðŸ¤– Domjuan Bot System Deployment
          Status: ${{ needs.test.result == 'success' && 'Success' || 'Failed' }}
          Tests: ${{ needs.test.result }}
          Build: ${{ needs.build-and-push.result }}
          Heroku: ${{ needs.deploy-heroku.result }}
          Vercel: ${{ needs.deploy-vercel.result }}
      if: always() && secrets.SLACK_WEBHOOK