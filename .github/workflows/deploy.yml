name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    env:
      NODE_ENV: test
    
    steps:
    - uses: actions/checkout@v4.1.0
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4.0.0
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint:check
    
    - name: Run tests
      run: npm test
      
    - name: Check for security vulnerabilities
      run: npm audit --audit-level moderate
      continue-on-error: false

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4.1.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4.0.0
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --omit=dev
    
    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        
    # Alternative: Deploy to Vercel
    # - name: Deploy to Vercel
    #   uses: amondnet/vercel-action@v20
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID}}
    #     vercel-project-id: ${{ secrets.PROJECT_ID}}
    #     vercel-args: '--prod'