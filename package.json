{
  "name": "portfolio-website",
  "version": "1.0.0",
  "description": "Professional portfolio website with payment processing",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "build": "echo 'Static site - no build step required'",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:health": "curl -f http://localhost:3000/health || echo 'Health check failed'",
    "test:integration": "npm run test && npm run test:health",
    "docker:build": "docker build -t domjuan-bot-system .",
    "docker:run": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "pm2:start": "pm2 start ecosystem.config.js --env production",
    "pm2:stop": "pm2 stop domjuan-bot-system",
    "pm2:restart": "pm2 restart domjuan-bot-system",
    "pm2:logs": "pm2 logs domjuan-bot-system",
    "backup": "bash scripts/backup.sh",
    "monitor": "bash scripts/monitor.sh",
    "deploy:heroku": "git push heroku main",
    "setup:production": "npm ci --production && npm run setup:dirs && npm run setup:logs",
    "setup:dirs": "mkdir -p data logs backups",
    "setup:logs": "mkdir -p logs && touch logs/app.log logs/error.log",
    "health": "curl -s http://localhost:3000/health | jq '.' || echo 'Service not running'"
  },
  "keywords": [
    "portfolio",
    "payment",
    "stripe",
    "nodejs",
    "express"
  ],
  "author": "Portfolio Owner",
  "license": "MIT",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^8.1.0",
    "express-validator": "^7.2.1",
    "helmet": "^7.0.0",
    "morgan": "^1.10.1",
    "socket.io": "^4.8.1",
    "stripe": "^12.0.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "jest": "^30.1.3",
    "nodemon": "^3.0.1",
    "pm2": "^6.0.13",
    "supertest": "^7.1.4"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "routes/**/*.js",
      "middleware/**/*.js",
      "config/**/*.js",
      "!**/node_modules/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": ["text", "lcov", "html"]
  }
}
